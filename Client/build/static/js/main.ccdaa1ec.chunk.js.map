{"version":3,"sources":["AskQuestion.js","PostAnswer.js","Question.js","Questions.js","App.js","index.js"],"names":["AskQuestion","props","state","title","desc","answers","event","this","setState","target","name","value","fetch","headers","method","mode","body","JSON","stringify","response","json","data","console","log","placeholder","onChange","type","onClick","_","onSubmit","Component","PostAnswer","id","answer","autoComplete","Question","submitAnswer","vote","answerId","question","getQuestion","content","map","a","className","key","_id","text","addVote","votes","to","Questions","list","App","API_URL","process","questions","getQuestions","then","url","result","find","q","newQuestion","length","element","x","parseInt","unshift","path","submit","comments","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccdaa1ec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass AskQuestion extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: \"\",\r\n\t\t\tdesc: \"\",\r\n\t\t\tanswers: []\r\n\t\t};\r\n\t}\r\n\r\n\tonChange(event) {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tasync onSubmit() {\r\n\t\t// this.props.submit(this.state.title, this.state.desc, this.state.answers);\r\n\r\n\t\tlet response = await fetch('http://localhost:8080/api/newquestion/', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'PUT',\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttitle: this.state.title,\r\n\t\t\t\t\tdesc: this.state.desc\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Here's the response: \", data)\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Write a title here\"\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tonChange={event => this.onChange(event)}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Write your question here\"\r\n\t\t\t\t\tname=\"desc\"\r\n\t\t\t\t\tonChange={event => this.onChange(event)}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={_ => this.onSubmit()}>Ask Question</button>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AskQuestion;","import React, {Component} from 'react';\r\n\r\nclass PostAnswer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({\r\n            id: this.props.data,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    async onSubmit() {\r\n        // this.props.submit(this.state.answer, this.state.id);\r\n        let response = await fetch(`http://localhost:8080/api/questions/${this.state.id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'PUT',\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tid: this.state.id,\r\n\t\t\t\t\tanswer: this.state.answer\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Here's the response: \", data)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Post New Answer</h3>\r\n                <input autoComplete=\"off\" name=\"answer\" onChange={event => this.onChange(event)} type=\"text\"/>\r\n                <button onClick={_ => this.onSubmit()}>Send Answer</button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostAnswer;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport PostAnswer from \"./PostAnswer\";\r\n\r\nclass Question extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid: this.props.id\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsubmit(answer) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tanswer: answer\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.props.submitAnswer(this.state.answer, this.state.id);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tasync addVote(id, vote) {\r\n\t\tlet response = await fetch('http://localhost:8080/api/vote/', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'PUT',\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tanswerId: id,\r\n\t\t\t\t\tvote: vote\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Here's the response: \", data)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst question = this.props.getQuestion(this.props.id);\r\n\t\t// const question = this.props.getQuestion(id);\r\n\t\tlet content = <p>Loading...</p>;\r\n\t\tif (question) {\r\n\t\t\tcontent = (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h1>{question.title}</h1>\r\n                    <p>{question.question}</p>\r\n\r\n\t\t\t\t\t<div id=\"newAnswer\">\r\n\t\t\t\t\t\t<PostAnswer data={this.state.id}></PostAnswer>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h3>Answers</h3>\r\n\t\t\t\t\t<ul id=\"questions\">\r\n\t\t\t\t\t\t{question.answers.map(a => (\r\n\t\t\t\t\t\t\t<li className=\"clearfix\" key={a._id}>\r\n\t\t\t\t\t\t\t\t<p>{a.text}</p>\r\n\t\t\t\t\t\t\t\t<div className=\"voting\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"upvote\" onClick={ () => {this.addVote(a._id, \"up\")}}>Upvote</button>\r\n\t\t\t\t\t\t\t\t\t<p>{a.votes}</p>\r\n\t\t\t\t\t\t\t\t\t<button className=\"downvote\" onClick={ () => {this.addVote(a._id, \"down\")}}>Downvote</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<Link to=\"/\" className=\"back\">Back</Link>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn content;\r\n\t}\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Questions extends Component {\r\n\trender() {\r\n\t\tlet questions = this.props.data;\r\n\t\tconst list = questions.map(question => (\r\n\t\t\t<li key={question._id}>\r\n\t\t\t\t<Link to={`/question/${question._id}`}>{question.title}</Link>\r\n\t\t\t</li>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h3>All questions</h3>\r\n\t\t\t\t<ul>{list}</ul>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from \"react\";\nimport { Router, Link } from \"@reach/router\";\nimport AskQuestion from \"./AskQuestion\";\nimport Question from \"./Question\";\nimport Questions from \"./Questions\";\nimport \"./style.css\";\n\nclass App extends Component {\n\tAPI_URL = process.env.REACT_APP_API_URL;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tquestions: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// Get everything from the API\n\t\tthis.getQuestions().then(() => console.log(\"Questions gotten!\"));\n\t}\n\n\tasync getQuestions() {\n\t\tlet url = `${this.API_URL}/questions`; // URL of the API.\n\t\tlet result = await fetch(url); // Get the data\n\t\tlet json = await result.json(); // Turn it into json\n\t\treturn this.setState({\n\t\t\t// Set it in the state\n\t\t\tquestions: json\n\t\t});\n\t}\n\n\t// getQuestion(id) {\n\t//     const findFunction = question => question.id === parseInt(id);\n\t//     return this.state.questions.find(findFunction);\n\t// }\n\n\tgetQuestion(id) {\n\t\t// Find the relevant kitten by id\n\t\treturn this.state.questions.find(q => q._id === id);\n\t}\n\n\tsubmit(title, question, answers) {\n\t\tlet last = this.state.questions[this.state.questions.length - 1];\n\t\tconst newQuestion = {\n\t\t\tid: last.id + 1,\n\t\t\ttitle: title,\n\t\t\tquestion: question,\n\t\t\tanswers: answers\n\t\t};\n\t\tthis.setState({\n\t\t\tquestions: [...this.state.questions, newQuestion]\n\t\t});\n\t}\n\n\tsubmitAnswer(answer, id) {\n\t\tconsole.log(answer, id);\n\t\tlet state = this.state.questions;\n\t\tlet element = state.find(x => x.id === parseInt(id));\n\t\telement.answers.unshift(answer);\n\t\tconsole.log(element);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<li>Questions</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/ask\">\n\t\t\t\t\t\t\t<li>Ask a question</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<Router>\n\t\t\t\t\t<AskQuestion\n\t\t\t\t\t\tpath=\"/ask\"\n\t\t\t\t\t\tsubmit={(title, desc, comments) =>\n\t\t\t\t\t\t\tthis.submit(title, desc, comments)\n\t\t\t\t\t\t}\n\t\t\t\t\t></AskQuestion>\n\t\t\t\t\t<Question\n\t\t\t\t\t\tpath=\"/question/:id\"\n\t\t\t\t\t\tgetQuestion={id => this.getQuestion(id)}\n\t\t\t\t\t\tsubmitAnswer={(answer, id) => this.submitAnswer(answer, id)}\n\t\t\t\t\t></Question>\n\t\t\t\t\t<Questions path=\"/\" data={this.state.questions}></Questions>\n\t\t\t\t</Router>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}